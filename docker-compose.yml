services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - VUE_APP_API_URL=http://localhost:1080
    depends_on:
      - external-api-mock
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://markuser:markpassword@db:5432/markdb?sslmode=disable
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: markdb
      POSTGRES_USER: markuser
      POSTGRES_PASSWORD: markpassword
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U markuser -d markdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  queue:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  external-api-mock:
    image: mockserver/mockserver
    container_name: mockserver
    ports:
      - "1080:1080"
    volumes:
      - ./mockserver_expectations.json:/config/mockserver_expectations.json
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: "/config/mockserver_expectations.json"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: